<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Game Dev on davcri</title>
    <link>https://davcri.github.io/tags/game-dev/</link>
    <description>Recent content in Game Dev on davcri</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>davcri91@gmail.com (Davide Cristini)</managingEditor>
    <webMaster>davcri91@gmail.com (Davide Cristini)</webMaster>
    <lastBuildDate>Tue, 01 Jan 2019 10:25:00 +0100</lastBuildDate>
    
	<atom:link href="https://davcri.github.io/tags/game-dev/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Devember 2018 Retrospective</title>
      <link>https://davcri.github.io/posts/devember2018-retrospective/</link>
      <pubDate>Tue, 01 Jan 2019 10:25:00 +0100</pubDate>
      <author>davcri91@gmail.com (Davide Cristini)</author>
      <guid>https://davcri.github.io/posts/devember2018-retrospective/</guid>
      <description>&lt;p&gt;During December I took a challenge: code 1 hour every day. I decide to work on a
Triple Triad clone (Final Fantasy VIII card game) made with the Godot Engine.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>How to reparent nodes with GDScript</title>
      <link>https://davcri.github.io/posts/godot-reparent-node/</link>
      <pubDate>Sun, 16 Dec 2018 20:00:59 +0000</pubDate>
      <author>davcri91@gmail.com (Davide Cristini)</author>
      <guid>https://davcri.github.io/posts/godot-reparent-node/</guid>
      <description>&lt;p&gt;While working on a card game with Godot (the code will soon be open sourced), I
had to reparent a node from one parent to another. Here it is two simple ways to do it.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Programmatically create an AtlasTexture in Godot</title>
      <link>https://davcri.github.io/posts/programmatically-create-atlastexture-with-gdscript/</link>
      <pubDate>Tue, 04 Dec 2018 16:23:44 +0000</pubDate>
      <author>davcri91@gmail.com (Davide Cristini)</author>
      <guid>https://davcri.github.io/posts/programmatically-create-atlastexture-with-gdscript/</guid>
      <description>I&amp;rsquo;m currently working on a card game tutorial (that will soon be open sourced) and I needed to create an AtlasTexture resource programmatically, a task that I didn&amp;rsquo;t find documented anywhere in the Godot reference so I thought about creating this short post to describe how to do it.
What I tried At first I tried to create an AtlasTexture with var t = AtlasTexture() but this was not working at all:</description>
    </item>
    
    <item>
      <title>Implicit type conversion in GDScript - When math gets in the way</title>
      <link>https://davcri.github.io/posts/gdscript-implicit-type-conversion/</link>
      <pubDate>Thu, 08 Nov 2018 12:00:59 +0000</pubDate>
      <author>davcri91@gmail.com (Davide Cristini)</author>
      <guid>https://davcri.github.io/posts/gdscript-implicit-type-conversion/</guid>
      <description>&lt;p&gt;While coding a simple AI for my (&lt;em&gt;italian&lt;/em&gt;) &lt;a href=&#34;https://youtu.be/AY1zuH2mHQ0&#34;&gt;Godot video tutorial series&lt;/a&gt;, I
needed vectors with these kind of random values:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Vector2(0, 1)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Vector2(-1, 1)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&amp;hellip;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Essentially I wanted to generate random values of &lt;code&gt;1&lt;/code&gt;, &lt;code&gt;0&lt;/code&gt; or &lt;code&gt;-1&lt;/code&gt; and then use
them as Vector2 coordinates.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>